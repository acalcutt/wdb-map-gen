Sources
https://github.com/openmaptiles/openmaptiles
https://github.com/openmaptiles/openmaptiles-tools
https://github.com/omniscale/imposm3
https://github.com/giggls/osml10n-python

References
https://imposm.org/docs/imposm3/latest/tutorial.html#preparation
https://ninefinity.org/post/importing-openstreetmap-planet-osm-with-imposm3-and-osmosis/
https://github.com/giggls/osml10n-python/blob/master/INSTALL.md

This is mostly a de-dockerized version of OpenMapTiles v3.9 (https://github.com/openmaptiles/openmaptiles). It very closly keeps to the way the openmaptiles quickstart works, minus all the docker obfuscation

# Install/run on debian 11


------------- Installing all needed componenets ------------- 

# Python Python-3 Install from source with pip and open ssl support
apt-get install zlib1g-dev libssl-dev libffi-dev curl wget python3 python3-pip
export PATH="/usr/lib/postgresql/13/bin:$PATH"

# openmaptiles-tools install
apt-get install graphviz sqlite3 aria2 osmctools git
python3 -m pip install git+https://github.com/openmaptiles/openmaptiles-tools

# Posgresql 13
sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
apt-get update
apt-get install postgresql-13 postgresql-server-dev-13
systemctl enable postgresql

# osml10n Postgres extension
sudo apt-get install devscripts equivs libicu-dev postgresql-server-dev-all libkakasi2-dev libutf8proc-dev pandoc
git clone https://github.com/giggls/mapnik-german-l10n.git
cd mapnik-german-l10n
make
make install

# gzip Postgres extension
sudo apt-get install build-essential zlib1g-dev postgresql-server-dev-all pkg-config fakeroot devscripts
git clone https://github.com/pramsey/pgsql-gzip.git
cd pgsql-gzip
make
make install

# GEOS
wget http://download.osgeo.org/geos/geos-3.9.0.tar.bz2
tar -xvf geos-3.9.0.tar.bz2
cd geos-3.9.0/
./configure
make -j
make install

#Install proj
apt-get install sqlite3 libsqlite3-dev libtiff-dev libcurl4-openssl-dev pkg-config
wget https://download.osgeo.org/proj/proj-7.1.1.tar.gz
tar -xvf proj-7.1.1.tar.gz
cd proj-7.1.1
./configure
make
make install
#Fix so 'proj --version' works. 
#Fixed (ERROR:  could not load library "/usr/lib/postgresql/12/lib/postgis-3.so": libproj.so.19: cannot open shared object file: No such file or directory)
ln -s /usr/local/lib/libproj.so.19 /usr/lib/libproj.so.19
ln -s /usr/local/lib/libproj.so.19.1.1 /usr/lib/libproj.so.19.1.1

Install #gdal
apt-get install libsqlite3-dev
wget https://github.com/OSGeo/gdal/releases/download/v3.1.3/gdal-3.1.3.tar.gz
tar -xvf gdal-3.1.3.tar.gz
cd gdal-3.1.3
./configure --with-proj=/usr/local
make
make install
#Fix for (ogr2ogr: error while loading shared libraries: libgdal.so.27: cannot open shared object file: No such file or directory)
ln -s /usr/local/lib/libgdal.so.27.0.3 /usr/lib/libgdal.so.27.0.3
ln -s /usr/local/lib/libgdal.so /usr/lib/libgdal.so
ln -s /usr/local/lib/libgdal.so.27 /usr/lib/libgdal.so.27

# postgis
apt-get install libxml2-dev libprotobuf-dev libprotobuf-c-dev protobuf-c-compiler
wget https://download.osgeo.org/postgis/source/postgis-3.1.0.tar.gz
tar -xvf postgis-3.1.0.tar.gz
cd postgis-3.1.0
./configure
make
make install

#GO
wget https://golang.org/dl/go1.15.2.linux-amd64.tar.gz
tar -xvf go1.15.2.linux-amd64.tar.gz
mv go /usr/local

#Leveldb
wget https://github.com/google/leveldb/archive/v1.19.tar.gz
tar -xvf v1.19.tar.gz
cd leveldb-1.19/
make
scp out-static/lib* out-shared/lib* /usr/local/lib/
cd include/
scp -r leveldb /usr/local/include/

#Imposm
sudo apt-get install libgeos-dev libleveldb-dev build-essential
cd [wdb-map-gen DIR]/imposm3
export GOPATH=`pwd`
go get github.com/omniscale/imposm3
go install github.com/omniscale/imposm3/cmd/imposm

#Node Version Manager
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
nvm install v8.15.0
nvm use v8.15.0

#tile-copy
npm install --unsafe-perm -g  tl mapnik@^3.7.2 @mapbox/mbtiles @mapbox/tilelive @mapbox/tilelive-vector @mapbox/tilelive-bridge @mapbox/tilelive-mapnik git+https://github.com/acalcutt/tilelive-tmsource.git

------------- Import Map Data into Postgresql ------------- 
./create_db.sh
./load_water.sh
./load_osmborder.sh
./load_naturalearth.sh
./load_planet.sh
./load_wikidata.sh
./load_sql.sh

------------- Export Map Data to MBtiles ------------- 
./export_mbtiles.sh


# Install/run on Windows debian WSL

Install inside your debian WSL instance with the step above. Start postgresql with the command /etc/init.d/postgresql start



